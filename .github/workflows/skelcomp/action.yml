name: 'Hello World'
description: 'Greet someone'
inputs:
  who-to-greet:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash
    - id: random-number-generator
      run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
      shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - run: goodbye.sh
      shell: bash













# name: Checkout, pnpm install
# description: Foo
# inputs:
#   package_dir:
#     required: true
#     type: string
# runs:
#   using: "composite"
#   steps:
#     - name: ShowVars
#     run: echo "${{ inputs.package_dir }}"
      # - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "Do we get the paths ? ${{ github.event.paths }}"
      # - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v4
      # - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "🖥️ The workflow is now ready to test your code on the runner. ${{ github.workspace }}"
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}
      # - run: echo "🍏 This job's status is ${{ job.status }}."
    # steps:
    # - uses: actions/checkout@v3
    # - uses: pnpm/action-setup@v2
    #   with:
    #     version: 8
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: 18
    # # PNPM Store cache setup
    # - name: Get pnpm store directory
    #   id: pnpm-cache
    #   run: 'echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT'
    # - name: Setup pnpm cache
    #   uses: actions/cache@v3
    #   with:
    #     path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
    #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
    #     restore-keys: '${{ runner.os }}-pnpm-store-'

    # - name: Install dependencies
    #   run: pnpm install

    # - name: Run svelte-check
    #   run: pnpm ci:check
    #   env:
    #     VERCEL_ENV: dev
