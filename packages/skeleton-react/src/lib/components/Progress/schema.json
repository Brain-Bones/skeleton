{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "IntlTranslations": {
            "propertyOrder": [
                "value"
            ],
            "type": "object"
        },
        "Iterable<React.ReactNode>": {
            "propertyOrder": [
                "__@iterator@83"
            ],
            "type": "object"
        },
        "Orientation": {
            "enum": [
                "horizontal",
                "vertical"
            ],
            "type": "string"
        },
        "Partial<{root:string;track:string;label:string;circle:string;}>": {
            "properties": {
                "circle": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "root": {
                    "type": "string"
                },
                "track": {
                    "type": "string"
                }
            },
            "propertyOrder": [
                "root",
                "track",
                "label",
                "circle"
            ],
            "type": "object"
        },
        "ProgressProps": {
            "properties": {
                "base": {
                    "description": "Set root base classes",
                    "type": "string"
                },
                "bg": {
                    "description": "Set root background classes",
                    "type": "string"
                },
                "children": {
                    "$ref": "#/definitions/React.ReactNode"
                },
                "classes": {
                    "description": "Set root arbitrary classes",
                    "type": "string"
                },
                "dir": {
                    "default": "ltr",
                    "description": "The document's text/writing direction.",
                    "enum": [
                        "ltr",
                        "rtl"
                    ],
                    "type": "string"
                },
                "getRootNode": {
                    "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron.",
                    "propertyOrder": [],
                    "type": "object"
                },
                "height": {
                    "description": "Set root height classes",
                    "type": "string"
                },
                "ids": {
                    "$ref": "#/definitions/Partial<{root:string;track:string;label:string;circle:string;}>",
                    "description": "The ids of the elements in the progress bar. Useful for composition."
                },
                "label": {
                    "$ref": "#/definitions/React.ReactNode",
                    "description": "Set the label"
                },
                "labelBase": {
                    "description": "Set label base classes.",
                    "type": "string"
                },
                "labelClasses": {
                    "description": "Set label classes.",
                    "type": "string"
                },
                "labelText": {
                    "description": "Set label text classes.",
                    "type": "string"
                },
                "max": {
                    "default": 100,
                    "description": "The maximum allowed value of the progress bar.",
                    "type": "number"
                },
                "meterAnimate": {
                    "description": "Set meter animation classes for indeterminate mode. (value === undefined)",
                    "type": "string"
                },
                "meterBase": {
                    "description": "Set meter base classes.",
                    "type": "string"
                },
                "meterBg": {
                    "description": "Set meter bg classes",
                    "type": "string"
                },
                "meterClasses": {
                    "description": "Set meter arbitrary classes.",
                    "type": "string"
                },
                "meterRounded": {
                    "description": "Set meter rounded classes.",
                    "type": "string"
                },
                "meterTransition": {
                    "description": "Set meter transition classes.",
                    "type": "string"
                },
                "min": {
                    "default": 0,
                    "description": "The minimum allowed value of the progress bar.",
                    "type": "number"
                },
                "orientation": {
                    "$ref": "#/definitions/Orientation",
                    "default": "horizontal",
                    "description": "The orientation of the element."
                },
                "rounded": {
                    "description": "Set root rounded classes",
                    "type": "string"
                },
                "trackBase": {
                    "description": "Set the track base classes.",
                    "type": "string"
                },
                "trackBg": {
                    "description": "Set the track background classes.",
                    "type": "string"
                },
                "trackClasses": {
                    "description": "Set arbitrary track classes.",
                    "type": "string"
                },
                "trackRounded": {
                    "description": "Set the track border radius classes.",
                    "type": "string"
                },
                "translations": {
                    "$ref": "#/definitions/IntlTranslations",
                    "description": "The localized messages to use."
                },
                "value": {
                    "default": 50,
                    "description": "The current value of the progress bar.",
                    "type": "number"
                },
                "width": {
                    "description": "Set root width classes",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "base",
                "bg",
                "width",
                "height",
                "rounded",
                "classes",
                "labelBase",
                "labelText",
                "labelClasses",
                "trackBase",
                "trackBg",
                "trackRounded",
                "trackClasses",
                "meterBase",
                "meterBg",
                "meterRounded",
                "meterTransition",
                "meterAnimate",
                "meterClasses",
                "label",
                "children",
                "max",
                "min",
                "value",
                "dir",
                "getRootNode",
                "orientation",
                "ids",
                "translations"
            ],
            "type": "object"
        },
        "React.ReactElement<any,string|React.JSXElementConstructor<any>>": {
            "description": "Represents a JSX element.\n\nWhere {@link ReactNode} represents everything that can be rendered, `ReactElement`\nonly represents JSX.",
            "properties": {
                "key": {
                    "type": "string"
                },
                "props": {
                    "description": "The type of the props object"
                },
                "type": {
                    "anyOf": [
                        {
                            "propertyOrder": [],
                            "type": "object"
                        },
                        {
                            "propertyOrder": [],
                            "type": "object"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The type of the component or tag"
                }
            },
            "propertyOrder": [
                "type",
                "props",
                "key"
            ],
            "required": [
                "key",
                "props",
                "type"
            ],
            "type": "object"
        },
        "React.ReactNode": {
            "anyOf": [
                {
                    "$ref": "#/definitions/React.ReactElement<any,string|React.JSXElementConstructor<any>>"
                },
                {
                    "$ref": "#/definitions/Iterable<React.ReactNode>"
                },
                {
                    "$ref": "#/definitions/React.ReactPortal"
                },
                {
                    "type": [
                        "string",
                        "number",
                        "boolean"
                    ]
                }
            ],
            "description": "Represents all of the things React can render.\n\nWhere {@link ReactElement} only represents JSX, `ReactNode` represents everything that can be rendered."
        },
        "React.ReactPortal": {
            "properties": {
                "children": {
                    "$ref": "#/definitions/React.ReactNode"
                },
                "key": {
                    "type": "string"
                },
                "props": {
                    "description": "The type of the props object"
                },
                "type": {
                    "anyOf": [
                        {
                            "propertyOrder": [],
                            "type": "object"
                        },
                        {
                            "propertyOrder": [],
                            "type": "object"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The type of the component or tag"
                }
            },
            "propertyOrder": [
                "children",
                "type",
                "props",
                "key"
            ],
            "required": [
                "children",
                "key",
                "props",
                "type"
            ],
            "type": "object"
        }
    }
}

