---
import type { GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import { getEntry } from 'astro:content'

export const getStaticPaths = (async () => {
    const pages = await getCollection('components')
    return pages.map(({ slug }) => {
        return {
            params: { slug },
        }
    })
}) satisfies GetStaticPaths

// Get the slug from the incoming server request
const { slug } = Astro.params

// Get the feature name from the slug
const featureName = slug.split('/')[1]

// Query based on the slug
const commmon: any = await getEntry('components', `common/${featureName}`)
const entry = await getEntry('components', slug)

// Handle 404 not found
if (entry === undefined) return Astro.redirect('/404')

// Render the entry to HTML in the template
const { Content, remarkPluginFrontmatter } = await entry.render()

// Append common frontmatter
// https://github.com/withastro/astro/issues/7972
// https://docs.astro.build/en/guides/content-collections/#modifying-frontmatter-with-remark
for (const [key, value] of Object.entries(commmon.data)) {
    remarkPluginFrontmatter[key] = value
}
---

<Content />
