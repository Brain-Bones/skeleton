---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';

export const getStaticPaths = (async () => {
	const entries = await getCollection('components');
	return entries.map((entry) => ({ params: { slug: entry.slug }, props: { entry } }));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;

// Get the feature name from the slug
const featureName = entry.slug.split('/')[1];
const commmon = (await getEntry('components', `common/${featureName}`))!; // "!" is safe because we know the entry exists

// Render the entry to HTML in the template
const { Content, remarkPluginFrontmatter } = await entry.render();

// Append common frontmatter
// https://github.com/withastro/astro/issues/7972
// https://docs.astro.build/en/guides/content-collections/#modifying-frontmatter-with-remark
for (const [key, value] of Object.entries(commmon.data)) {
	remarkPluginFrontmatter[key] = value;
}
---

<Content />
