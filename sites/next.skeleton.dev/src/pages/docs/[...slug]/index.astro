---
import type { GetStaticPaths } from 'astro';
import { getCollection, getEntryBySlug } from 'astro:content';

export const getStaticPaths = (async () => {
	const entries = await getCollection('docs');
	return entries.map((entry) => ({
		params: {
			slug: entry.slug,
		},
		props: {
			entry,
		},
	}));
}) satisfies GetStaticPaths;

async function getComponentMeta(component: string) {
	const meta = await getEntryBySlug('docs', `components/${component}/meta`);
	if (meta === null || meta === undefined) {
		return null;
	}
	return meta;
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();

// Grab component from slug
const component = entry.slug.split('/').filter(Boolean).at(-2) ?? '';

// Get component meta
const meta = await getComponentMeta(component);

// Append common frontmatter
// https://github.com/withastro/astro/issues/7972
// https://docs.astro.build/en/guides/content-collections/#modifying-frontmatter-with-remark
if (meta !== null) {
	Object.assign(remarkPluginFrontmatter, meta.data);
}
---

<Content />
