---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';

export const getStaticPaths = (async () => {
	const entries = await getCollection('docs');
	return entries.map((entry) => ({
		params: {
			slug: entry.slug,
		},
		props: {
			entry,
		},
	}));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;
const routeArr = entry.slug.split('/');

// Create allowlist for sections that use split meta/framework format
const metaCollections = [ 'components' ];
const meta = metaCollections.includes(routeArr[0]) ? (await getEntry('docs', entry.slug)) : null;

const { Content, remarkPluginFrontmatter} = await entry.render();

// Append common frontmatter
// https://github.com/withastro/astro/issues/7972
// https://docs.astro.build/en/guides/content-collections/#modifying-frontmatter-with-remark
if (meta) {
	for (const [key, value] of Object.entries(meta.data)) {
		remarkPluginFrontmatter[key] = value;
	}
}
---

<Content />
